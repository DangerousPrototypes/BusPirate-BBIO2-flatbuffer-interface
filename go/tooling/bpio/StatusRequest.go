// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package bpio

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type StatusRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsStatusRequest(buf []byte, offset flatbuffers.UOffsetT) *StatusRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &StatusRequest{}
	x.Init(buf, n+offset)
	return x
}

func FinishStatusRequestBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsStatusRequest(buf []byte, offset flatbuffers.UOffsetT) *StatusRequest {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &StatusRequest{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedStatusRequestBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *StatusRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *StatusRequest) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *StatusRequest) Query(j int) StatusRequestTypes {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return StatusRequestTypes(rcv._tab.GetInt8(a + flatbuffers.UOffsetT(j*1)))
	}
	return 0
}

func (rcv *StatusRequest) QueryLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *StatusRequest) MutateQuery(j int, n StatusRequestTypes) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.MutateInt8(a+flatbuffers.UOffsetT(j*1), int8(n))
	}
	return false
}

func StatusRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func StatusRequestAddQuery(builder *flatbuffers.Builder, query flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(query), 0)
}
func StatusRequestStartQueryVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(1, numElems, 1)
}
func StatusRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
