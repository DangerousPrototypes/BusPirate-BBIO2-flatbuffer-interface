// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ResponsePacketContents, unionToResponsePacketContents, unionListToResponsePacketContents } from '../bpio/response-packet-contents.js';


export class ResponsePacket {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ResponsePacket {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsResponsePacket(bb:flatbuffers.ByteBuffer, obj?:ResponsePacket):ResponsePacket {
  return (obj || new ResponsePacket()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsResponsePacket(bb:flatbuffers.ByteBuffer, obj?:ResponsePacket):ResponsePacket {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ResponsePacket()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

versionMajor():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

versionMinor():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 1;
}

contentsType():ResponsePacketContents {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ResponsePacketContents.NONE;
}

contents<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startResponsePacket(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addVersionMajor(builder:flatbuffers.Builder, versionMajor:number) {
  builder.addFieldInt8(0, versionMajor, 0);
}

static addVersionMinor(builder:flatbuffers.Builder, versionMinor:number) {
  builder.addFieldInt8(1, versionMinor, 1);
}

static addContentsType(builder:flatbuffers.Builder, contentsType:ResponsePacketContents) {
  builder.addFieldInt8(2, contentsType, ResponsePacketContents.NONE);
}

static addContents(builder:flatbuffers.Builder, contentsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, contentsOffset, 0);
}

static endResponsePacket(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishResponsePacketBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedResponsePacketBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createResponsePacket(builder:flatbuffers.Builder, versionMajor:number, versionMinor:number, contentsType:ResponsePacketContents, contentsOffset:flatbuffers.Offset):flatbuffers.Offset {
  ResponsePacket.startResponsePacket(builder);
  ResponsePacket.addVersionMajor(builder, versionMajor);
  ResponsePacket.addVersionMinor(builder, versionMinor);
  ResponsePacket.addContentsType(builder, contentsType);
  ResponsePacket.addContents(builder, contentsOffset);
  return ResponsePacket.endResponsePacket(builder);
}
}
