// automatically generated by the FlatBuffers compiler, do not modify

package bpio;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ResponsePacket extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static ResponsePacket getRootAsResponsePacket(ByteBuffer _bb) { return getRootAsResponsePacket(_bb, new ResponsePacket()); }
  public static ResponsePacket getRootAsResponsePacket(ByteBuffer _bb, ResponsePacket obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ResponsePacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String error() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer errorAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer errorInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public byte contentsType() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table contents(Table obj) { int o = __offset(8); return o != 0 ? __union(obj, o + bb_pos) : null; }

  public static int createResponsePacket(FlatBufferBuilder builder,
      int errorOffset,
      byte contentsType,
      int contentsOffset) {
    builder.startTable(3);
    ResponsePacket.addContents(builder, contentsOffset);
    ResponsePacket.addError(builder, errorOffset);
    ResponsePacket.addContentsType(builder, contentsType);
    return ResponsePacket.endResponsePacket(builder);
  }

  public static void startResponsePacket(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addError(FlatBufferBuilder builder, int errorOffset) { builder.addOffset(0, errorOffset, 0); }
  public static void addContentsType(FlatBufferBuilder builder, byte contentsType) { builder.addByte(1, contentsType, 0); }
  public static void addContents(FlatBufferBuilder builder, int contentsOffset) { builder.addOffset(2, contentsOffset, 0); }
  public static int endResponsePacket(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishResponsePacketBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedResponsePacketBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ResponsePacket get(int j) { return get(new ResponsePacket(), j); }
    public ResponsePacket get(ResponsePacket obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

