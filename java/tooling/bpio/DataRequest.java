// automatically generated by the FlatBuffers compiler, do not modify

package bpio;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class DataRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static DataRequest getRootAsDataRequest(ByteBuffer _bb) { return getRootAsDataRequest(_bb, new DataRequest()); }
  public static DataRequest getRootAsDataRequest(ByteBuffer _bb, DataRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public DataRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public boolean startMain() { int o = __offset(4); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean startAlt() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public int dataWrite(int j) { int o = __offset(8); return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0; }
  public int dataWriteLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector dataWriteVector() { return dataWriteVector(new ByteVector()); }
  public ByteVector dataWriteVector(ByteVector obj) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer dataWriteAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer dataWriteInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public int bytesRead() { int o = __offset(10); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public boolean stopMain() { int o = __offset(12); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean stopAlt() { int o = __offset(14); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static int createDataRequest(FlatBufferBuilder builder,
      boolean startMain,
      boolean startAlt,
      int dataWriteOffset,
      int bytesRead,
      boolean stopMain,
      boolean stopAlt) {
    builder.startTable(6);
    DataRequest.addDataWrite(builder, dataWriteOffset);
    DataRequest.addBytesRead(builder, bytesRead);
    DataRequest.addStopAlt(builder, stopAlt);
    DataRequest.addStopMain(builder, stopMain);
    DataRequest.addStartAlt(builder, startAlt);
    DataRequest.addStartMain(builder, startMain);
    return DataRequest.endDataRequest(builder);
  }

  public static void startDataRequest(FlatBufferBuilder builder) { builder.startTable(6); }
  public static void addStartMain(FlatBufferBuilder builder, boolean startMain) { builder.addBoolean(0, startMain, false); }
  public static void addStartAlt(FlatBufferBuilder builder, boolean startAlt) { builder.addBoolean(1, startAlt, false); }
  public static void addDataWrite(FlatBufferBuilder builder, int dataWriteOffset) { builder.addOffset(2, dataWriteOffset, 0); }
  public static int createDataWriteVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createDataWriteVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startDataWriteVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addBytesRead(FlatBufferBuilder builder, int bytesRead) { builder.addShort(3, (short) bytesRead, (short) 0); }
  public static void addStopMain(FlatBufferBuilder builder, boolean stopMain) { builder.addBoolean(4, stopMain, false); }
  public static void addStopAlt(FlatBufferBuilder builder, boolean stopAlt) { builder.addBoolean(5, stopAlt, false); }
  public static int endDataRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public DataRequest get(int j) { return get(new DataRequest(), j); }
    public DataRequest get(DataRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

