// automatically generated by the FlatBuffers compiler, do not modify

package bpio;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ConfigurationRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static ConfigurationRequest getRootAsConfigurationRequest(ByteBuffer _bb) { return getRootAsConfigurationRequest(_bb, new ConfigurationRequest()); }
  public static ConfigurationRequest getRootAsConfigurationRequest(ByteBuffer _bb, ConfigurationRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ConfigurationRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String mode() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer modeAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer modeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public bpio.ModeConfiguration modeConfiguration() { return modeConfiguration(new bpio.ModeConfiguration()); }
  public bpio.ModeConfiguration modeConfiguration(bpio.ModeConfiguration obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public boolean modeBitorderMsb() { int o = __offset(8); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean modeBitorderLsb() { int o = __offset(10); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean psuDisable() { int o = __offset(12); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean psuEnable() { int o = __offset(14); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public long psuSetMv() { int o = __offset(16); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public int psuSetMa() { int o = __offset(18); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 300; }
  public boolean pullupDisable() { int o = __offset(20); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean pullupEnable() { int o = __offset(22); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public int ioDirectionMask() { int o = __offset(24); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int ioDirection() { int o = __offset(26); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int ioValueMask() { int o = __offset(28); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int ioValue() { int o = __offset(30); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }

  public static int createConfigurationRequest(FlatBufferBuilder builder,
      int modeOffset,
      int modeConfigurationOffset,
      boolean modeBitorderMsb,
      boolean modeBitorderLsb,
      boolean psuDisable,
      boolean psuEnable,
      long psuSetMv,
      int psuSetMa,
      boolean pullupDisable,
      boolean pullupEnable,
      int ioDirectionMask,
      int ioDirection,
      int ioValueMask,
      int ioValue) {
    builder.startTable(14);
    ConfigurationRequest.addPsuSetMv(builder, psuSetMv);
    ConfigurationRequest.addModeConfiguration(builder, modeConfigurationOffset);
    ConfigurationRequest.addMode(builder, modeOffset);
    ConfigurationRequest.addPsuSetMa(builder, psuSetMa);
    ConfigurationRequest.addIoValue(builder, ioValue);
    ConfigurationRequest.addIoValueMask(builder, ioValueMask);
    ConfigurationRequest.addIoDirection(builder, ioDirection);
    ConfigurationRequest.addIoDirectionMask(builder, ioDirectionMask);
    ConfigurationRequest.addPullupEnable(builder, pullupEnable);
    ConfigurationRequest.addPullupDisable(builder, pullupDisable);
    ConfigurationRequest.addPsuEnable(builder, psuEnable);
    ConfigurationRequest.addPsuDisable(builder, psuDisable);
    ConfigurationRequest.addModeBitorderLsb(builder, modeBitorderLsb);
    ConfigurationRequest.addModeBitorderMsb(builder, modeBitorderMsb);
    return ConfigurationRequest.endConfigurationRequest(builder);
  }

  public static void startConfigurationRequest(FlatBufferBuilder builder) { builder.startTable(14); }
  public static void addMode(FlatBufferBuilder builder, int modeOffset) { builder.addOffset(0, modeOffset, 0); }
  public static void addModeConfiguration(FlatBufferBuilder builder, int modeConfigurationOffset) { builder.addOffset(1, modeConfigurationOffset, 0); }
  public static void addModeBitorderMsb(FlatBufferBuilder builder, boolean modeBitorderMsb) { builder.addBoolean(2, modeBitorderMsb, false); }
  public static void addModeBitorderLsb(FlatBufferBuilder builder, boolean modeBitorderLsb) { builder.addBoolean(3, modeBitorderLsb, false); }
  public static void addPsuDisable(FlatBufferBuilder builder, boolean psuDisable) { builder.addBoolean(4, psuDisable, false); }
  public static void addPsuEnable(FlatBufferBuilder builder, boolean psuEnable) { builder.addBoolean(5, psuEnable, false); }
  public static void addPsuSetMv(FlatBufferBuilder builder, long psuSetMv) { builder.addInt(6, (int) psuSetMv, (int) 0L); }
  public static void addPsuSetMa(FlatBufferBuilder builder, int psuSetMa) { builder.addShort(7, (short) psuSetMa, (short) 300); }
  public static void addPullupDisable(FlatBufferBuilder builder, boolean pullupDisable) { builder.addBoolean(8, pullupDisable, false); }
  public static void addPullupEnable(FlatBufferBuilder builder, boolean pullupEnable) { builder.addBoolean(9, pullupEnable, false); }
  public static void addIoDirectionMask(FlatBufferBuilder builder, int ioDirectionMask) { builder.addByte(10, (byte) ioDirectionMask, (byte) 0); }
  public static void addIoDirection(FlatBufferBuilder builder, int ioDirection) { builder.addByte(11, (byte) ioDirection, (byte) 0); }
  public static void addIoValueMask(FlatBufferBuilder builder, int ioValueMask) { builder.addByte(12, (byte) ioValueMask, (byte) 0); }
  public static void addIoValue(FlatBufferBuilder builder, int ioValue) { builder.addByte(13, (byte) ioValue, (byte) 0); }
  public static int endConfigurationRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ConfigurationRequest get(int j) { return get(new ConfigurationRequest(), j); }
    public ConfigurationRequest get(ConfigurationRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

