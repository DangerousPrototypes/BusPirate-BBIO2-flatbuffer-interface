// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace bpio
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct StatusRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static StatusRequest GetRootAsStatusRequest(ByteBuffer _bb) { return GetRootAsStatusRequest(_bb, new StatusRequest()); }
  public static StatusRequest GetRootAsStatusRequest(ByteBuffer _bb, StatusRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public StatusRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bpio.StatusRequestTypes Query(int j) { int o = __p.__offset(4); return o != 0 ? (bpio.StatusRequestTypes)__p.bb.GetSbyte(__p.__vector(o) + j * 1) : (bpio.StatusRequestTypes)0; }
  public int QueryLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<bpio.StatusRequestTypes> GetQueryBytes() { return __p.__vector_as_span<bpio.StatusRequestTypes>(4, 1); }
#else
  public ArraySegment<byte>? GetQueryBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public bpio.StatusRequestTypes[] GetQueryArray() { int o = __p.__offset(4); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); bpio.StatusRequestTypes[] a = new bpio.StatusRequestTypes[l]; for (int i = 0; i < l; i++) { a[i] = (bpio.StatusRequestTypes)__p.bb.GetSbyte(p + i * 1); } return a; }

  public static Offset<bpio.StatusRequest> CreateStatusRequest(FlatBufferBuilder builder,
      VectorOffset queryOffset = default(VectorOffset)) {
    builder.StartTable(1);
    StatusRequest.AddQuery(builder, queryOffset);
    return StatusRequest.EndStatusRequest(builder);
  }

  public static void StartStatusRequest(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddQuery(FlatBufferBuilder builder, VectorOffset queryOffset) { builder.AddOffset(0, queryOffset.Value, 0); }
  public static VectorOffset CreateQueryVector(FlatBufferBuilder builder, bpio.StatusRequestTypes[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddSbyte((sbyte)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateQueryVectorBlock(FlatBufferBuilder builder, bpio.StatusRequestTypes[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateQueryVectorBlock(FlatBufferBuilder builder, ArraySegment<bpio.StatusRequestTypes> data) { builder.StartVector(1, data.Count, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateQueryVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<bpio.StatusRequestTypes>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartQueryVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<bpio.StatusRequest> EndStatusRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<bpio.StatusRequest>(o);
  }
}


static public class StatusRequestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyVectorOfData(tablePos, 4 /*Query*/, 1 /*bpio.StatusRequestTypes*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
