<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace bpio;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class ConfigurationRequest extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return ConfigurationRequest
     */
    public static function getRootAsConfigurationRequest(ByteBuffer $bb)
    {
        $obj = new ConfigurationRequest();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return ConfigurationRequest
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getMode()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getModeConfiguration()
    {
        $obj = new ModeConfiguration();
        $o = $this->__offset(6);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    /**
     * @return bool
     */
    public function getModeBitorderMsb()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /**
     * @return bool
     */
    public function getModeBitorderLsb()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /**
     * @return bool
     */
    public function getPsuDisable()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /**
     * @return bool
     */
    public function getPsuEnable()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /**
     * @return uint
     */
    public function getPsuSetMv()
    {
        $o = $this->__offset(16);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @return ushort
     */
    public function getPsuSetMa()
    {
        $o = $this->__offset(18);
        return $o != 0 ? $this->bb->getUshort($o + $this->bb_pos) : 300;
    }

    /**
     * @return bool
     */
    public function getPullupDisable()
    {
        $o = $this->__offset(20);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /**
     * @return bool
     */
    public function getPullupEnable()
    {
        $o = $this->__offset(22);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /**
     * @return byte
     */
    public function getIoDirectionMask()
    {
        $o = $this->__offset(24);
        return $o != 0 ? $this->bb->getByte($o + $this->bb_pos) : 0;
    }

    /**
     * @return byte
     */
    public function getIoDirection()
    {
        $o = $this->__offset(26);
        return $o != 0 ? $this->bb->getByte($o + $this->bb_pos) : 0;
    }

    /**
     * @return byte
     */
    public function getIoValueMask()
    {
        $o = $this->__offset(28);
        return $o != 0 ? $this->bb->getByte($o + $this->bb_pos) : 0;
    }

    /**
     * @return byte
     */
    public function getIoValue()
    {
        $o = $this->__offset(30);
        return $o != 0 ? $this->bb->getByte($o + $this->bb_pos) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startConfigurationRequest(FlatBufferBuilder $builder)
    {
        $builder->StartObject(14);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return ConfigurationRequest
     */
    public static function createConfigurationRequest(FlatBufferBuilder $builder, $mode, $mode_configuration, $mode_bitorder_msb, $mode_bitorder_lsb, $psu_disable, $psu_enable, $psu_set_mv, $psu_set_ma, $pullup_disable, $pullup_enable, $io_direction_mask, $io_direction, $io_value_mask, $io_value)
    {
        $builder->startObject(14);
        self::addMode($builder, $mode);
        self::addModeConfiguration($builder, $mode_configuration);
        self::addModeBitorderMsb($builder, $mode_bitorder_msb);
        self::addModeBitorderLsb($builder, $mode_bitorder_lsb);
        self::addPsuDisable($builder, $psu_disable);
        self::addPsuEnable($builder, $psu_enable);
        self::addPsuSetMv($builder, $psu_set_mv);
        self::addPsuSetMa($builder, $psu_set_ma);
        self::addPullupDisable($builder, $pullup_disable);
        self::addPullupEnable($builder, $pullup_enable);
        self::addIoDirectionMask($builder, $io_direction_mask);
        self::addIoDirection($builder, $io_direction);
        self::addIoValueMask($builder, $io_value_mask);
        self::addIoValue($builder, $io_value);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addMode(FlatBufferBuilder $builder, $mode)
    {
        $builder->addOffsetX(0, $mode, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addModeConfiguration(FlatBufferBuilder $builder, $modeConfiguration)
    {
        $builder->addOffsetX(1, $modeConfiguration, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addModeBitorderMsb(FlatBufferBuilder $builder, $modeBitorderMsb)
    {
        $builder->addBoolX(2, $modeBitorderMsb, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addModeBitorderLsb(FlatBufferBuilder $builder, $modeBitorderLsb)
    {
        $builder->addBoolX(3, $modeBitorderLsb, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addPsuDisable(FlatBufferBuilder $builder, $psuDisable)
    {
        $builder->addBoolX(4, $psuDisable, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addPsuEnable(FlatBufferBuilder $builder, $psuEnable)
    {
        $builder->addBoolX(5, $psuEnable, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addPsuSetMv(FlatBufferBuilder $builder, $psuSetMv)
    {
        $builder->addUintX(6, $psuSetMv, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param ushort
     * @return void
     */
    public static function addPsuSetMa(FlatBufferBuilder $builder, $psuSetMa)
    {
        $builder->addUshortX(7, $psuSetMa, 300);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addPullupDisable(FlatBufferBuilder $builder, $pullupDisable)
    {
        $builder->addBoolX(8, $pullupDisable, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addPullupEnable(FlatBufferBuilder $builder, $pullupEnable)
    {
        $builder->addBoolX(9, $pullupEnable, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param byte
     * @return void
     */
    public static function addIoDirectionMask(FlatBufferBuilder $builder, $ioDirectionMask)
    {
        $builder->addByteX(10, $ioDirectionMask, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param byte
     * @return void
     */
    public static function addIoDirection(FlatBufferBuilder $builder, $ioDirection)
    {
        $builder->addByteX(11, $ioDirection, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param byte
     * @return void
     */
    public static function addIoValueMask(FlatBufferBuilder $builder, $ioValueMask)
    {
        $builder->addByteX(12, $ioValueMask, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param byte
     * @return void
     */
    public static function addIoValue(FlatBufferBuilder $builder, $ioValue)
    {
        $builder->addByteX(13, $ioValue, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endConfigurationRequest(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
